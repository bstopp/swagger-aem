swagger: '2.0'
info:
  title: CRX Package Manager API
  description: 'API for interacting with the CRX Package Manager in AEM.'
  contact:
    name: Bryan Stopp
    email: bryan.stopp@gmail.com
  license:
    name: Apache-2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: '6.2.0'

host: localhost:4502
basePath: /crx/packmgr

schemes:
  - http
  - https
paths:
  /download.jsp:
    get:
      summary: Download a package
      description: Downloads the package at the specified path. Returns a Tempfile object.
      operationId: download
      produces:
        - application/octet-stream
        - application/zip
      parameters:
        - name: path
          in: query
          description: The path to the package to download.
          type: string
      responses:
        '200':
          description: Successful
          schema:
            type: file
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
  /groups.jsp:
    get:
      summary: List package groups
      description: Returns a list of all package groups available.
      operationId: groups
      produces:
        - application/json
      parameters:
        - name: compressVersion
          in: query
          description: Compress versions; count all versions of the same packages as a single entry.
          type: string
        - name: includeAll
          in: query
          description: Return a total count of all packages. Defaults to false.
          type: boolean
        - name: includeRoot
          in: query
          description: Include the root package. Defaults to false.
          type: boolean
        - name: includeMyPackages
          in: query
          description: Include the 'my_packages' group. Only applicable if the group has no packages. Defaults to false.
          type: boolean
        - name: onlyTopLevel
          in: query
          description: Only list top-level groups, ie. do not list all nested groups.
          type: boolean
      responses:
        '200':
          description: Successful
          schema:
            $ref: '#/definitions/GroupList'
        '302':
          $ref: '#/responses/LoginRedirect'
        '401':
          $ref: '#/responses/Unauthorized'
        '500':
          $ref: '#/responses/ServerError'
  /init.jsp:
    get:
      summary: Metadata
      description: Display metadata about this package manager.
      operationId: init
      produces:
        - application/json
      responses:
        '200':
          description: Successful
          schema:
            $ref: '#/definitions/InitData'
        '302':
          $ref: '#/responses/LoginRedirect'
        '500':
          $ref: '#/responses/ServerError'
  /installstatus.jsp:
    get:
      summary: Package Installation Status
      description: Returns a status of the installation of OSGi packages.
      operationId: installstatus
      produces:
        - application/json
      responses:
        '200':
          description: Successful
          schema:
            $ref: '#/definitions/InstallStatus'
        '302':
          $ref: '#/responses/LoginRedirect'
        '500':
          $ref: '#/responses/ServerError'
  /list.jsp:
    get:
      summary: List packages
      description: Returns a list of all available packages defined.
      operationId: list
      produces:
        - application/json
      parameters:
        - name: q
          in: query
          description: Term to search within package names.
          type: string
        - name: includeVersions
          in: query
          description: Include versions of package in results.
          type: boolean
        - name: path
          in: query
          description: The path to a specific package definition.
          type: string
      responses:
        '200':
          description: Successful
          schema:
            $ref: '#/definitions/PackageList'
        '302':
          $ref: '#/responses/LoginRedirect'
        '401':
          $ref: '#/responses/Unauthorized'
        '500':
          $ref: '#/responses/ServerError'
  /screenshot.jsp:
    get:
      summary: Get screenshot
      description: Returns the screenshot at the specified path.
      operationId: screenshot
      produces:
        - image/jpg
        - image/jpeg
        - image/png
      parameters:
        - name: path
          in: query
          description: The path to the screenshot.
          type: string
      responses:
        '200':
          description: Successful
          schema:
            type: file
        '302':
          $ref: '#/responses/LoginRedirect'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
  /service.jsp:
    get:
      summary: Generic operation service.
      description: Provides endpoint for executing package manipulation commands. Responses are in the format of the ServiceResponse in the defintions section.
      operationId: service_get
      produces:
        - application/octet-stream
        - application/zip
        - text/plain
      parameters:
        - name: cmd
          in: query
          description: The command to execute.
          required: true
          type: string
          enum:
            - help
            - ls
            - rm
            - build
            - inst
            - uninst
            - get
        - name: name
          in: query
          description: The name of the package on which to execute the command.
          type: string
        - name: group
          in: query
          description: The group of the package on which to execute the command.
          type: string
        - name: strict
          in: query
          description: Fail on an error.
          type: boolean
      responses:
        '200':
          description: Successful
          schema:
            type: string
        '302':
          $ref: '#/responses/LoginRedirect'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
    post:
      summary: Generic operation service.
      description: Provides endpoint for executing package manipulation commands. Responses are in the format of the ServiceResponse in the defintions section.
      operationId: service_post
      consumes:
        - multipart/form-data
      parameters:
        - name: file
          in: formData
          description: Package file to upload
          required: true
          type: file
        - name: name
          in: formData
          description: The hint for the package's name if the definiton doesn't have one.
          type: string
        - name: strict
          in: formData
          description: Fail on an error.
          type: boolean
        - name: force
          in: formData
          description: Force the package upload.
          type: boolean
        - name: install
          in: formData
          description: Install the package upon upload
          type: boolean
      responses:
        '200':
          description: Successful
          schema:
            type: string
        '302':
          $ref: '#/responses/LoginRedirect'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
  /service/exec.json/etc/packages/{group}/{name}-{version}.zip:
    post:
      summary: Generic operation service.
      description: Provides a different API for executing package manipulation commands. Operates on a specific version of the package.
      operationId: service_exec
      produces:
        - application/json
      parameters:
        - name: cmd
          in: query
          description: The command to execute.
          required: true
          type: string
          enum:
            - build
            - install
            - delete
            - uninstall
            - dryrun
            - replicate
        - name: name
          in: path
          description: The name of the package on which to execute the command.
          required: true
          type: string
        - name: group
          in: path
          description: The group of the package on which to execute the command.
          required: true
          type: string
        - name: version
          in: path
          description: The version of the package on which to execute the command.
          required: true
          type: string
      responses:
        '200':
          description: Successful
          schema:
            $ref: '#/definitions/ServiceExecResponse'
        '302':
          $ref: '#/responses/LoginRedirect'
        '401':
          $ref: '#/responses/Unauthorized'
        '500':
          $ref: '#/responses/ServerError'

  /thumbnail.jsp:
    get:
      summary: Get package thumbnail
      description: Returns the package's thumbnail image.
      operationId: thumbnail
      produces:
        - image/jpg
        - image/jpeg
        - image/png
      parameters:
        - name: path
          in: query
          description: The path to the package.
          type: string
      responses:
        '200':
          description: Successful
          schema:
            type: file
        '302':
          $ref: '#/responses/LoginRedirect'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'

definitions:
  Filter:
    type: object
    properties:
      root:
        type: string
      rules:
        type: array
        items:
          $ref: '#/definitions/FilterRule'
  FilterRule:
    type: object
    properties:
      modifier:
        type: string
        enum:
          - exclude
          - include
      pattern:
        type: string
  Group:
    type: object
    properties:
      name:
        type: string
      title:
        type: string
      count:
        type: integer
        format: int64
      deepCount:
        type: integer
        format: int64
  GroupList:
    type: object
    properties:
      groups:
        type: array
        items:
          $ref: '#/definitions/Group'
  InitData:
    type: object
    properties:
      contextPath:
        type: string
      launchpadContextPath:
        type: string
      jcrVersion:
        type: string
      workspace:
        type: string
      userID:
        type: string
      workspaces:
        type: array
        items:
          type: string
  InstallStatus:
    type: object
    properties:
      status:
        type: object
        properties:
          finished:
            type: boolean
          itemCount:
            type: integer
            format: int64
  Package:
    type: object
    properties:
      pid:
        type: string
      path:
        type: string
      name:
        type: string
      downloadName:
        type: string
      group:
        type: string
      groupTitle:
        type: string
      version:
        type: string
      description:
        type: string
      thumbnail:
        type: string
      buildCount:
        type: integer
        format: int64
      lastModified:
        type: integer
        format: int64
      lastModifiedBy:
        type: string
      created:
        type: integer
        format: int64
      createBy:
        type: string
      lastUnpacked:
        type: integer
        format: int64
      lastUnpackedBy:
        type: string
      lastWrapped:
        type: integer
        format: int64
      lastWrappedBy:
        type: string
      lastUnwrapped:
        type: integer
        format: int64
      lastUnwrappedBy:
        type: string
      size:
        type: integer
        format: int64
      hasSnapshot:
        type: boolean
      needsRewrap:
        type: boolean
      builtWith:
        type: string
      testedWith:
        type: string
      fixedBugs:
        type: string
      requiresRoot:
        type: boolean
      requiresRestart:
        type: boolean
      acHandling:
        type: string
      dependencies:
        type: array
        items:
          type: string
      resolved:
        type: boolean
      filter:
        type: array
        items:
          $ref: '#/definitions/Filter'
      screenshots:
        type: array
        items:
          type: string
  PackageList:
    type: object
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/Package'
      total:
        type: integer
        format: int64
  ServiceResponse:
    type: object
    properties:
      version:
        type: string
      user:
        type: string
      workspace:
        type: string
      request:
        type: object
        properties:
          param:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                value:
                  type: string
      response:
        type: object
        properties:
          data:
            type: object
          status:
            type: object
            properties:
              code:
                type: int
  ServiceExecResponse:
    type: object
    properties:
      success:
        type: boolean
      msg:
        type: string
  UpdateStatus:
    type: object
    properties:
      success:
        type: boolean
      msg:
        type: string
      path:
        type: string
responses:
  LoginRedirect:
    description: Redirected to Login
  Unauthorized:
    description: Unauthorized
  Forbidden:
    description: Forbidden (ACL)
  NotFound:
    description: Not Found
  ServerError:
    description: Server Error

securityDefinitions:
  basic:
    type: basic

security:
  - basic: []

externalDocs:
  description: AEM Package Manager documentation.
  url: 'https://docs.adobe.com/docs/en/aem/6-2/administer/content/package-manager.html'
